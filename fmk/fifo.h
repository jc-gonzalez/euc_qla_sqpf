/******************************************************************************
 * File:    fifo.h
 *          This file is part of QPF
 *
 * Domain:  qpf.fmk.FiFo
 *
 * Last update:  1.0
 *
 * Date:    20190614
 *
 * Author:  J C Gonzalez
 *
 * Copyright (C) 2019 Euclid SOC Team / J C Gonzalez
 *_____________________________________________________________________________
 *
 * Topic: General Information
 *
 * Purpose:
 *   Declare FiFo class
 *
 * Created by:
 *   J C Gonzalez
 *
 * Status:
 *   Prototype
 *
 * Dependencies:
 *   TBD
 *
 * Files read / modified:
 *   none
 *
 * History:
 *   See <Changelog> file
 *
 * About: License Conditions
 *   See <License> file
 *
 ******************************************************************************/

#ifndef FIFO_H
#define FIFO_H

//============================================================
// Group: External Dependencies
//============================================================

//------------------------------------------------------------
// Topic: System headers
//   - iostream
//------------------------------------------------------------
#include <iostream>
#include <queue>
#include <thread>
#include <mutex>
#include <condition_variable>

//------------------------------------------------------------
// Topic: External packages
//------------------------------------------------------------

//------------------------------------------------------------
// Topic: Project headers
//------------------------------------------------------------
#include "types.h"

//==========================================================================
// Class: FiFo
//==========================================================================
template<typename T>
class FiFo {

public:
    //----------------------------------------------------------------------
    // Constructor
    //----------------------------------------------------------------------
    FiFo(size_t _sz = 40);

    //----------------------------------------------------------------------
    // Destructor
    //----------------------------------------------------------------------
    virtual ~FiFo();

public:
    //----------------------------------------------------------------------
    // Method: setSize
    //----------------------------------------------------------------------
    void setSize(size_t _sz = 40);

    //----------------------------------------------------------------------
    // Method: put
    //----------------------------------------------------------------------
    T put(T && obj);

    //----------------------------------------------------------------------
    // Method: find
    //----------------------------------------------------------------------
    bool find(T obj);

    //----------------------------------------------------------------------
    // Method: empty
    //----------------------------------------------------------------------
    bool empty();

    //----------------------------------------------------------------------
    // Method: size
    //----------------------------------------------------------------------
    size_t size();

    //----------------------------------------------------------------------
    // Method: len
    //----------------------------------------------------------------------
    size_t len();

    static const T null; 

private:
    std::queue<T> objects;
    std::mutex    queueMutex;
    std::condition_variable cv;
    size_t sz;
    size_t ln;
};

#endif // FIFO_H
